// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

namespace Repository.Migrations
{
    [DbContext(typeof(StatsContext))]
    [Migration("20210215193136_init3")]
    partial class init3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Models.BaseballStatistic", b =>
                {
                    b.Property<Guid>("StatLineID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("BattingAve")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ERA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Hits")
                        .HasColumnType("int");

                    b.Property<decimal>("RBI")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Runs")
                        .HasColumnType("int");

                    b.Property<int>("Saves")
                        .HasColumnType("int");

                    b.Property<int>("Steals")
                        .HasColumnType("int");

                    b.Property<int>("StrikeOuts")
                        .HasColumnType("int");

                    b.HasKey("StatLineID");

                    b.ToTable("BaseballStatistics");
                });

            modelBuilder.Entity("Models.BasketballStatistic", b =>
                {
                    b.Property<Guid>("StatLineID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Assists")
                        .HasColumnType("int");

                    b.Property<int>("FGoals")
                        .HasColumnType("int");

                    b.Property<int>("FThrows")
                        .HasColumnType("int");

                    b.Property<int>("Fouls")
                        .HasColumnType("int");

                    b.Property<int>("PossessionTime")
                        .HasColumnType("int");

                    b.Property<int>("Rebounds")
                        .HasColumnType("int");

                    b.Property<int>("Steals")
                        .HasColumnType("int");

                    b.Property<int>("ThreePts")
                        .HasColumnType("int");

                    b.Property<int>("Turnovers")
                        .HasColumnType("int");

                    b.HasKey("StatLineID");

                    b.ToTable("BasketballStatistics");
                });

            modelBuilder.Entity("Models.FootBallStatistic", b =>
                {
                    b.Property<Guid>("StatLineID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("FirstDownCons")
                        .HasColumnType("int");

                    b.Property<int>("Penalties")
                        .HasColumnType("int");

                    b.Property<int>("Plays")
                        .HasColumnType("int");

                    b.Property<int>("PossessionTime")
                        .HasColumnType("int");

                    b.Property<int>("Sacks")
                        .HasColumnType("int");

                    b.Property<int>("Turnovers")
                        .HasColumnType("int");

                    b.Property<int>("YardsRec")
                        .HasColumnType("int");

                    b.Property<int>("YardsRun")
                        .HasColumnType("int");

                    b.HasKey("StatLineID");

                    b.ToTable("FootballStatistics");
                });

            modelBuilder.Entity("Models.GolfStatistic", b =>
                {
                    b.Property<Guid>("StatLineID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Birdies")
                        .HasColumnType("int");

                    b.Property<int>("Bogeys")
                        .HasColumnType("int");

                    b.Property<int>("DriveAccuracy")
                        .HasColumnType("int");

                    b.Property<int>("DriveDistance")
                        .HasColumnType("int");

                    b.Property<int>("Eagles")
                        .HasColumnType("int");

                    b.Property<int>("GIR")
                        .HasColumnType("int");

                    b.Property<int>("PutsperGIR")
                        .HasColumnType("int");

                    b.Property<int>("SandSaves")
                        .HasColumnType("int");

                    b.Property<int>("ScoreToPar")
                        .HasColumnType("int");

                    b.Property<int>("Scrambles")
                        .HasColumnType("int");

                    b.HasKey("StatLineID");

                    b.ToTable("GolfStatistics");
                });

            modelBuilder.Entity("Models.HockeyStatistic", b =>
                {
                    b.Property<Guid>("StatLineID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Blocks")
                        .HasColumnType("int");

                    b.Property<int>("FaceOffWins")
                        .HasColumnType("int");

                    b.Property<int>("GiveAways")
                        .HasColumnType("int");

                    b.Property<int>("Goals")
                        .HasColumnType("int");

                    b.Property<int>("Hits")
                        .HasColumnType("int");

                    b.Property<int>("PenaltyMins")
                        .HasColumnType("int");

                    b.Property<int>("PowerPlayOpps")
                        .HasColumnType("int");

                    b.Property<int>("Shots")
                        .HasColumnType("int");

                    b.Property<int>("TakeAWays")
                        .HasColumnType("int");

                    b.HasKey("StatLineID");

                    b.ToTable("HockeyStatistics");
                });

            modelBuilder.Entity("Models.PlayerGame", b =>
                {
                    b.Property<Guid>("UserID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GameID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StatLineID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserID", "GameID");

                    b.ToTable("PlayerGames");
                });

            modelBuilder.Entity("Models.SoccerStatistic", b =>
                {
                    b.Property<Guid>("StatLineID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CornerKicks")
                        .HasColumnType("int");

                    b.Property<int>("Fouls")
                        .HasColumnType("int");

                    b.Property<int>("Goals")
                        .HasColumnType("int");

                    b.Property<int>("OffSides")
                        .HasColumnType("int");

                    b.Property<int>("PossessionTime")
                        .HasColumnType("int");

                    b.Property<int>("RedCards")
                        .HasColumnType("int");

                    b.Property<int>("ShotOnGoal")
                        .HasColumnType("int");

                    b.Property<int>("yellowCards")
                        .HasColumnType("int");

                    b.HasKey("StatLineID");

                    b.ToTable("SoccerStatistics");
                });
#pragma warning restore 612, 618
        }
    }
}
